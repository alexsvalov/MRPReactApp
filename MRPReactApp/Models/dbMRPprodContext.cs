// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace MRPReactApp.Models;

public partial class dbMRPprodContext : DbContext
{
    public dbMRPprodContext(DbContextOptions<dbMRPprodContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Blank> Blank { get; set; }

    public virtual DbSet<Customer> Customer { get; set; }

    public virtual DbSet<DetailComposition> DetailComposition { get; set; }

    public virtual DbSet<MarkSteel> MarkSteel { get; set; }

    public virtual DbSet<Material> Material { get; set; }

    public virtual DbSet<MaterialType> MaterialType { get; set; }

    public virtual DbSet<OrderComposition> OrderComposition { get; set; }

    public virtual DbSet<OrderProduct> OrderProduct { get; set; }

    public virtual DbSet<PlanComposition> PlanComposition { get; set; }

    public virtual DbSet<PlanProduct> PlanProduct { get; set; }

    public virtual DbSet<Product> Product { get; set; }

    public virtual DbSet<ProductKind> ProductKind { get; set; }

    public virtual DbSet<ProductType> ProductType { get; set; }

    public virtual DbSet<Specification> Specification { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Blank>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__blank__3213E83F7CC14C04");

            entity.ToTable("blank");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Lenght).HasColumnName("lenght");
            entity.Property(e => e.Material).HasColumnName("material");
            entity.Property(e => e.Weight)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("weight");
            entity.Property(e => e.Width).HasColumnName("width");

            entity.HasOne(d => d.MaterialNavigation).WithMany(p => p.Blank)
                .HasForeignKey(d => d.Material)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__blank__material__5CD6CB2B");
        });

        modelBuilder.Entity<Customer>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__customer__3213E83F9942F097");

            entity.ToTable("customer");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Address)
                .HasMaxLength(300)
                .HasColumnName("address");
            entity.Property(e => e.Contact)
                .HasMaxLength(300)
                .HasColumnName("contact");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .HasColumnName("email");
            entity.Property(e => e.Inn)
                .HasMaxLength(12)
                .HasColumnName("INN");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(300)
                .HasColumnName("name");
            entity.Property(e => e.Phone)
                .HasMaxLength(100)
                .HasColumnName("phone");
        });

        modelBuilder.Entity<DetailComposition>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__detail_c__3213E83FA9ECB52E");

            entity.ToTable("detail_composition");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Blank).HasColumnName("blank");
            entity.Property(e => e.Product).HasColumnName("product");

            entity.HasOne(d => d.BlankNavigation).WithMany(p => p.DetailComposition)
                .HasForeignKey(d => d.Blank)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__detail_co__blank__60A75C0F");

            entity.HasOne(d => d.ProductNavigation).WithMany(p => p.DetailComposition)
                .HasForeignKey(d => d.Product)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__detail_co__produ__5FB337D6");
        });

        modelBuilder.Entity<MarkSteel>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__mark_ste__3213E83F13AC9057");

            entity.ToTable("mark_steel");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("name");
        });

        modelBuilder.Entity<Material>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__material__3213E83F528B1781");

            entity.ToTable("material");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Mark).HasColumnName("mark");
            entity.Property(e => e.Size)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("size");
            entity.Property(e => e.Type).HasColumnName("type");

            entity.HasOne(d => d.MarkNavigation).WithMany(p => p.Material)
                .HasForeignKey(d => d.Mark)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__material__mark__300424B4");

            entity.HasOne(d => d.TypeNavigation).WithMany(p => p.Material)
                .HasForeignKey(d => d.Type)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__material__type__2F10007B");
        });

        modelBuilder.Entity<MaterialType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__material__3213E83FDC3BBF26");

            entity.ToTable("material_type");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("name");
        });

        modelBuilder.Entity<OrderComposition>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__order_co__3213E83F11455EDE");

            entity.ToTable("order_composition");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.OrderProduct).HasColumnName("order_product");
            entity.Property(e => e.Product).HasColumnName("product");
            entity.Property(e => e.Quantity).HasColumnName("quantity");

            entity.HasOne(d => d.OrderProductNavigation).WithMany(p => p.OrderComposition)
                .HasForeignKey(d => d.OrderProduct)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__order_com__order__398D8EEE");

            entity.HasOne(d => d.ProductNavigation).WithMany(p => p.OrderComposition)
                .HasForeignKey(d => d.Product)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__order_com__produ__3A81B327");
        });

        modelBuilder.Entity<OrderProduct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__order_pr__3213E83FE46AE1B7");

            entity.ToTable("order_product");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Customer).HasColumnName("customer");
            entity.Property(e => e.ExecutionDate)
                .HasColumnType("date")
                .HasColumnName("execution_date");
            entity.Property(e => e.OrderDate)
                .HasColumnType("date")
                .HasColumnName("order_date");
            entity.Property(e => e.OrderNumber)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("order_number");

            entity.HasOne(d => d.CustomerNavigation).WithMany(p => p.OrderProduct)
                .HasForeignKey(d => d.Customer)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__order_pro__custo__34C8D9D1");
        });

        modelBuilder.Entity<PlanComposition>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__plan_com__3213E83F5017706E");

            entity.ToTable("plan_composition");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.OrderProduct).HasColumnName("order_product");
            entity.Property(e => e.PlanProduct).HasColumnName("plan_product");

            entity.HasOne(d => d.OrderProductNavigation).WithMany(p => p.PlanComposition)
                .HasForeignKey(d => d.OrderProduct)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__plan_comp__order__3E52440B");

            entity.HasOne(d => d.PlanProductNavigation).WithMany(p => p.PlanComposition)
                .HasForeignKey(d => d.PlanProduct)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__plan_comp__plan___3D5E1FD2");
        });

        modelBuilder.Entity<PlanProduct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__plan_pro__3213E83F9A8AB67D");

            entity.ToTable("plan_product");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.PlanDate)
                .HasColumnType("date")
                .HasColumnName("plan_date");
            entity.Property(e => e.Version).HasColumnName("version");
        });

        modelBuilder.Entity<Product>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__product__3213E83FB27EFFD8");

            entity.ToTable("product");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("code");
            entity.Property(e => e.Kind).HasColumnName("kind");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(200)
                .HasColumnName("name");
            entity.Property(e => e.Purchase).HasColumnName("purchase");
            entity.Property(e => e.Type).HasColumnName("type");

            entity.HasOne(d => d.KindNavigation).WithMany(p => p.Product)
                .HasForeignKey(d => d.Kind)
                .HasConstraintName("FK__product__kind__286302EC");

            entity.HasOne(d => d.TypeNavigation).WithMany(p => p.Product)
                .HasForeignKey(d => d.Type)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__product__type__276EDEB3");
        });

        modelBuilder.Entity<ProductKind>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__product___3213E83F3588A5CE");

            entity.ToTable("product_kind");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("name");
        });

        modelBuilder.Entity<ProductType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__product___3213E83F76410BA5");

            entity.ToTable("product_type");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("name");
        });

        modelBuilder.Entity<Specification>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__specific__3213E83F5D9F5B79");

            entity.ToTable("specification");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Component).HasColumnName("component");
            entity.Property(e => e.Product).HasColumnName("product");
            entity.Property(e => e.Quantity).HasColumnName("quantity");

            entity.HasOne(d => d.ComponentNavigation).WithMany(p => p.SpecificationComponentNavigation)
                .HasForeignKey(d => d.Component)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__specifica__compo__4222D4EF");

            entity.HasOne(d => d.ProductNavigation).WithMany(p => p.SpecificationProductNavigation)
                .HasForeignKey(d => d.Product)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__specifica__produ__412EB0B6");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}